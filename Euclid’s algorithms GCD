#include <stdio.h>

// Euclid's algorithm to find GCD
int euclidGCD(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

// Consecutive integer checking to find GCD
int consecutiveIntegerGCD(int a, int b) {
    int gcd = 1;
    for (int i = 1; i <= a && i <= b; ++i) {
        if (a % i == 0 && b % i == 0) {
            gcd = i;
        }
    }
    return gcd;
}

// Modified Euclid's algorithm to find GCD
int modifiedEuclidGCD(int a, int b) {
    if (b == 0) {
        return a;
    }
    return modifiedEuclidGCD(b, a % b);
}

int main() {
    int num1, num2;

    // Input two non-negative integers
    printf("Enter two non-negative integers: ");
    scanf("%d %d", &num1, &num2);

    // Check if input is valid
    if (num1 < 0 || num2 < 0) {
        printf("Invalid input. Please enter non-negative integers.\n");
        return 1;
    }

    // Calculate GCD using Euclid's algorithm
    int gcd_euclid = euclidGCD(num1, num2);

    // Calculate GCD using consecutive integer checking
    int gcd_consecutive = consecutiveIntegerGCD(num1, num2);

    // Calculate GCD using modified Euclid's algorithm
    int gcd_modified_euclid = modifiedEuclidGCD(num1, num2);

    // Output results
    printf("Euclid's Algorithm: GCD of %d and %d is %d\n", num1, num2, gcd_euclid);
    printf("Consecutive Integer Checking: GCD of %d and %d is %d\n", num1, num2, gcd_consecutive);
    printf("Modified Euclid's Algorithm: GCD of %d and %d is %d\n", num1, num2, gcd_modified_euclid);

    return 0;
}
